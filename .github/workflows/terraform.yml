name: "infra as a code"
on:
  push: 
    branches:
      - main
      - staging
    paths:
      - my_workspace/**

  pull_request:
    branches:
      - main
    paths:
      - my_workspace/**

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: eu-north-1

jobs:
  terraform:
    name: "Apply terraform code changes"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./my_workspace

    steps:
      - name: Checkout the source code
        uses: actions/checkout@v4

      - name: Setup Terraform with specified version on runner
        uses: hashicorp/setup-terraform@v3

      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=${{ env.BUCKET_TF_STATE }}" -backend-config="region=${{ env.AWS_REGION }}"
      
      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -out=planfile
        continue-on-error: true

      - name: Terraform plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform destroy for main (production)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        id: destroy_main
        run: terraform destroy --auto-approve -input=false -parallelism=1 planfile

      - name: Terraform destroy for staging
        if: github.ref == 'refs/heads/staging' && github.event_name == 'push'
        id: destroy_staging
        run: terraform destroy --auto-approve -input=false -parallelism=1 

      - name: Terraform destroy for pull request to main (production)
        if: github.event_name == 'pull_request' && github.base_ref == 'refs/heads/main'
        id: apply_pr_main
        run: terraform destroy --auto-approve -input=false -parallelism=1 
